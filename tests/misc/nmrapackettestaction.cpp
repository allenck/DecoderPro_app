#include "nmrapackettestaction.h"
#include "nmrapackettest.h"
#include "joptionpane.h"
#include "assert1.h"
#include "loggerfactory.h"
#include "junitutil.h"

NmraPacketTestAction::NmraPacketTestAction(QObject* parent) : AbstractAction(tr("NmraPacketTest"), parent)
{
 connect(this, SIGNAL(triggered()), this, SLOT(actionPerformed()));

}
void NmraPacketTestAction::actionPerformed()
{
    NmraPacketTest* test = new NmraPacketTest();
    try
    {
     QStringList testList = QStringList()
       << "testAccDecoderPacket1"
       << "testAccDecoderPacket2"
       << "testAccDecoderPacket3"
       << "testAccDecoderPacket4"
       << "testAccDecoderPacket5"
       << "testAccDecoderPacket6"
       << "testAccDecoderPacket7"
       << "testAccDecoderPacket8"
       << "testAccDecoderPacket9"
       << "testAccDecoderPacket10"
       << "testAccDecoderPacket11"
       << "testAccDecoderPacket12"
       << "testAccDecoderPacket13"
       << "testOpsModeLong"
       << "testOpsModeShort"
       << "testAnalog1"
       << "testAnalog2"
       << "testF13F20A"
       << "testF13F20B"
       << "testF21F28A"
       << "testF21F28B"
       << "testConsist1"
       << "testConsist2"
       << "testConsist3"
       << "testIsAccSignalDecoderPktOK"
       << "testIsAccSignalDecoderPktFalseConsist"
       << "testIsAccSignalDecoderPktFalseFunction"
       << "testIsAccSignalDecoderPktFalseAnalog"
       << "testIsAccSignalDecoderPktFalseOpsWrite"
       << "testIsAccSignalDecoderPktFalseAccDecoder"
       << "testIsAccSignalDecoderPktFalseAccDecoderPktOpsMode"
       << "testIsAccSignalDecoderPktFalseAccDecoderPktOpsModeLegacy"
       << "testIsAccDecoderPktOpsModeFalseSignalDecoderPkt"
       << "testIsAccDecoderPktOpsModeFalseConsist"
       << "testIsAccDecoderPktOpsModeFalseFunction"
       << "testIsAccDecoderPktOpsModeFalseAnalog"
       << "testIsAccDecoderPktOpsModeFalseOpsWrite"
       << "testIsAccDecoderPktOpsModeFalseAccDecoder"
       << "testIsAccDecoderPktOpsModeOK"
       << "testIsAccDecoderPktOpsModeFalseAccDecoderPktOpsModeLegacy"
       << "testIsAccDecoderPktOpsModeLegacyFalseSignalDecoderPkt"
       << "testIsAccDecoderPktOpsModeLegacyFalseConsist"
       << "testIsAccDecoderPktOpsModeLegacyFalseFunction"
       << "testIsAccDecoderPktOpsModeLegacyFalseAnalog"
       << "testIsAccDecoderPktOpsModeLegacyFalseOpsWrite"
       << "testIsAccDecoderPktOpsModeLegacyFalseAccDecoder"
       << "testIsAccDecoderPktOpsModeLegacyFalseAccDecoderPktOpsMode"
       << "testIsAccDecoderPktOpsModeLegacyOK"
       << "testGetAccSignalDecoderPktAddr1"
       << "testGetAccSignalDecoderPktAddr2"
       << "testGetAccSignalDecoderPktAddr4"
       << "testGetAccSignalDecoderPktAddr8"
       << "testGetAccSignalDecoderPktAddr16"
       << "testGetAccSignalDecoderPktAddr32"
       << "testGetAccSignalDecoderPktAddr64"
       << "testGetAccSignalDecoderPktAddr128"
       << "testGetAccSignalDecoderPktAddr256"
       << "testGetAccSignalDecoderPktAddr512"
       << "testGetAccSignalDecoderPktAddr1024"
       << "testGetAccSignalDecoderPktAddr2044"
       << "testAccDecPktOpsModeLegacy1"
       << "testAccDecPktOpsMode1"
       << "testAccDecPktOpsModeLegacy2"
       << "testAccDecPktOpsMode2"
       << "testAccDecPktOpsModeLegacy510"
       << "testAccDecPktOpsMode510"
       << "testAccDecPktOpsModeLegacy511"
       << "testAccDecPktOpsMode511"
       << "testAccDecoderPktOpsModeLegacy1"
       << "testAccDecoderPktOpsMode1"
       << "testAccDecoderPktOpsModeLegacy4"
       << "testAccDecoderPktOpsMode4"
       << "testAccDecoderPktOpsModeLegacy5"
       << "testAccDecoderPktOpsMode5"
       << "testAccDecoderPktOpsMode252"
       << "testAccDecoderPktOpsMode253"
       << "testAccDecoderPktOpsMode256"
       << "testAccDecoderPktOpsMode257"
       << "testAccDecoderPktOpsModeLegacy2037"
       << "testAccDecoderPktOpsMode2037"
       << "testAccDecoderPktOpsModeLegacy2040"
       << "testAccDecoderPktOpsMode2040"
       << "testAccDecoderPktOpsModeLegacy2044"
       << "testAccDecoderPktOpsMode2044"
       << "testAccSignalDecoderPktOpsMode1"
       << "testAccSignalDecoderPktOpsMode4"
       << "testAccSignalDecoderPktOpsMode5"
       << "testAccSignalDecoderPktOpsMode252"
       << "testAccSignalDecoderPktOpsMode253"
       << "testAccSignalDecoderPktOpsMode256"
       << "testAccSignalDecoderPktOpsMode257"
       << "testAccSignalDecoderPktOpsMode2037"
       << "testAccSignalDecoderPktOpsMode2040"
       << "testAccSignalDecoderPktOpsMode2044"
       << "testAccSignalDecoderPkt1Aspect23"
       << "testAccSignalDecoderPkt2Aspect5"
       << "testAccSignalDecoderPkt3Aspect9"
       << "testAccSignalDecoderPkt4Aspect11"
       << "testAccSignalDecoderPkt5Aspect15"
       << "testAccSignalDecoderPkt6Aspect28"
       << "testAccSignalDecoderPkt7Aspect10"
       << "testAccSignalDecoderPkt8Aspect11"
       << "testAccSignalDecoderPkt252Aspect13"
       << "testAccSignalDecoderPkt253Aspect19"
       << "testAccSignalDecoderPkt254Aspect2"
       << "testAccSignalDecoderPkt255Aspect3"
       << "testAccSignalDecoderPkt256Aspect7"
       << "testAccSignalDecoderPkt2044Aspect0"
       << "testAccSignalDecoderPkt2044Aspect31"
       << "testAltAccSignalDecoderPktOpsMode1"
       << "testAltAccSignalDecoderPktOpsMode4"
       << "testAltAccSignalDecoderPktOpsMode5"
       << "testAltAccSignalDecoderPktOpsMode8"
       << "testAltAccSignalDecoderPktOpsMode9"
       << "testAltAccSignalDecoderPktOpsMode256"
       << "testAltAccSignalDecoderPktOpsMode257"
       << "testAltAccSignalDecoderPktOpsMode260"
       << "testAltAccSignalDecoderPktOpsMode261"
       << "testAltAccSignalDecoderPktOpsMode2041"
       << "testAltAccSignalDecoderPktOpsMode2044"
       << "testExtractAddressTypeAcc"
       << "testExtractAddressTypeShort"
       << "testExtractAddressTypeLong"
       << "testExtractAddressNumberAccSignal1"
       << "testExtractAddressNumberAccSignal2"
       << "testExtractAddressNumberAccSignal4"
       << "testExtractAddressNumberAccSignal8"
       << "testExtractAddressNumberAccSignal16"
       << "testExtractAddressNumberAccSignal32"
       << "testExtractAddressNumberAccSignal64"
       << "testExtractAddressNumberAccSignal128"
       << "testExtractAddressNumberAccSignal256"
       << "testExtractAddressNumberAcc1"
       << "testExtractAddressNumberAcc2"
       << "testExtractAddressNumberAcc4"
       << "testExtractAddressNumberAcc8"
       << "testExtractAddressNumberAcc16"
       << "testExtractAddressNumberAcc32"
       << "testExtractAddressNumberAcc64"
       << "testExtractAddressNumberAcc128"
       << "testExtractAddressNumberAcc256"
       << "testExtractAddressNumberAcc512"
       << "testExtractAddressNumberShort"
       << "testExtractAddressNumberLong"
       << "testSpeedStep28PacketOld"
       << "testSpeedStep28Packet"
       << "testToStringNoPacket"
       << "testToStringShortLocoPacket"
       << "testToStringAccessoryPacket1"
       ;
     JUnitUtil::runTests(test, testList);

    }
    catch (AssertionError* er)
    {
        JOptionPane::showMessageDialog(nullptr, er->getMessage(), tr("Assertion Error"), JOptionPane::WARNING_MESSAGE);
    }
}
Logger* NmraPacketTestAction::log = LoggerFactory::getLogger("NmraPacketTestAction");
