<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<!-- $Id: getgitcode.shtml 29952 2015-09-14 05:36:47Z jacobsen $ -->
<html lang="en">
<head>
    <TItlE>
 	JMRI: Getting the Code (Git Version in Development)
    </titlE>
    <META content="Bob Jacobsen" name=Author>
    <meta name="keywords" content="JMRI technical code Git SVN download">

    <!-- The combination of "Define" and {Header,Style, Logo and Footer} comments -->
    <!-- are an arbitrary design pattern used by the update.pl script to -->
    <!-- easily replace the common header/footer code for all the web pages -->

    <!-- delete the following 2 Defines if you want to use the default JMRI logo -->
    <!-- or change them to reflect your alternative logo -->

<!-- Style -->
  <META http-equiv=Content-Type content="text/html; charset=iso-8859-1">
  <link rel="stylesheet" type="text/css" href="/css/default.css" media="screen">
  <link rel="stylesheet" type="text/css" href="/css/print.css" media="print">
  <link rel="icon" href="/images/jmri.ico" type="image/png">
  <link rel="home" title="Home" href="/">
<!-- /Style -->
</head>

<!--#include virtual="/Header" -->
<!--#include virtual="Sidebar" -->

<div id="mainContent">
	    <!-- ------------- -->
	    <!-- Page Contents --> <!-- Required -->
	    <!-- ------------- -->

  <h1>JMRI: Getting the Code (Git Version in Development)</h1>

<em>Note that this page is under development.  JMRI
is considering migrating to using Git instead of Subversion (SVN).
Until that's decided and done, this page isn't relevant for 
JMRI users.</em>

  <h2>Quickstart</h2>

  <p>"<a href="https://git-scm.com">Git</a>" 
  is a powerful, free system for managing 
  code as it's worked-on by a distributed group.  Like SVN before it, 
  and CVS before that, it allows a group like JMRI to cooperate effectively.
  We keep our code, help files, 
  <a href="WebSite.shtml">web site</a>, 
  and everything else in a 
  Git repository hosted on 
  <a href="https://github.com/JMRI">GitHub.com</a>.
  
<h3>Viewing the Code Online</h3>
  <p>You can 
  <a href="">browse the JMRI code directly</a> <em>(link not permanent)</em>
  on that site. For example, if you'd like to look at this page,
  <a href="https://github.com/JMRI/jmri-test/blob/master/help/en/html/doc/Technical/getcode.shtml">click this link</a> 
  <em>(link not permanent)</em>
  to display its source HTML code.
  </p>

<h3>Proposing Changes</h3>
  
<a href="GitHubPencil.png"><img src="GitHubPencil.png" align="right" height="50" width="142"></a>
  <p>If you want to suggest a change to a file, first get a free
  <a href="https://github.com/join">GitHub account</a> and sign in.
  <p>
  Then go to the file you want to change and click the pencil icon on the upper-right of the page.
  <p>
<a href="GitHubProposeFileChange.png "><img src="GitHubProposeFileChange.png " align="right" height="135" width="221"></a>
  This will, after a second or two, give you a page where you can directly edit the
  contents of the file with your suggested change.
  Don't worry, you're not actually changing JMRI's version, just
  a copy local to you. 
  <p>
  Then fill out the form at the bottom with a useful subject
  line, and a description of why this is a good change, and click the
  "Propose file change" button.  This sends your change to the people who've
  agreed to maintain the JMRI central code, who will review and (usually) include it in 
  the new JMRI release.
  
  <h2>Access to the Full Code</h2>


  <p>Our source code is distributed using <a
  href="https://git-scm.com">Git</a>.  (We also keep
  the <a href="WebSite.shtml">web site</a> in Git, if you'd like
  to work with the source for that directly.)  
  If you want to work with the JMRI code, 
  the full <a href="WebSite.shtml">web site</a>,
  or any other large part of JMRI, 
  a minutes getting Git set up is well worth it.  We're sorry, but we
  just can't support other methods (sending around individual files, etc), as they're
  just too error prone.</p>

  <p>The steps are:
  <ul>
  <li>Get a <a href="https://github.com/join">GitHub account</a> and login
  <li>Tell GitHub to <a href="https://help.github.com/articles/fork-a-repo/">"fork" JMRI's repository</a> 
  into one of your own. There's a 
  <a href="https://help.github.com/articles/fork-a-repo/">good help page</a>,
  but basically you go to the 
  <a href="https://github.com/JMRI/jmri-test">JMRI repository page</a><em>(link not right)</em>
  and click the "fork" button in the upper right.
   
  <p>
  This gives you your own repository, which you can then work with freely.
  <li>Download a copy of your repository to your computer so you can work 
  with it.
  </ul>
  
  <p>
  For working with your copy, 
  it's possible to use Git from the command line, or from inside various 
  IDEs like XCode or NetBeans.  Some of the JMRI developers prefer that approach.
  But if you're new and reading this, we recommend that you 
  interact with our code repository through the
  "<a href="https://desktop.github.com">GitHub Desktop</a>" tool.
  Download it via <a href="https://desktop.github.com">this link</a>,
  install it and take the tutorial.
  
  <p><em>
  Note: GitHub Desktop is not (currently) available on the Linux platform. 
  As a result, it might be necessary to locate and install the needed client 
  software suitable for your flavor of Linux.  See the
  <a href="https://git-scm.com/downloads">Git downloads</a> 
  page for packages for many operating systems.  Alternatively, check the
  usual package manager for your flavor of Linux.
  </em></p>

  <p>Many development environments (e.g., Netbeans or Eclipse) will have
  support for Git, either directly or as an add-on.  Check the
  documentation for your favorite IDE for details on Git support.
  <ul>
  <li>In NetBeans, under the "Team" menu, select Git, then Clone Repository.
    Enter the repository URL from the 
    <a href="">JMRI GitHub page</a><em>(not final URL)</em>
    under "Repository URL" on the NetBeans form.  We recommend that you
    also enter your GitHub user name and password on the form, so 
    we can attribute your contributions to you later. Click "Next".
    Make sure that the "master*" box is checked to pull down the main
    version of the code. Click "Next", and then click "Finish".
    It'll take a few minutes to pull down a copy of the code
    (note the progress bar in the lower right), 
    and then you're good to go.
  </ul>
  </p>

  <p>If you want to get the code from the command line, do (substitute your GitHub account for YourGitHubName):
  <pre><code>
  $ mkdir ~/JMRIDevelopment
  $ cd ~/JMRIDevelopment
  $ git clone https://github.com/YourGitHubName/jmri.git
  </code></pre>
  
  <p>
  <em>(Paragraph not changed:  Decide whether to put in a 
  command here, or a GitHub Desktop walkthrough, or comments on various IDEs)</em>
  If you have an existing copy of the code ons your computer and want to update it
  to the most recent contents of the main JMRI repository, the command is:
  <pre>
  (add command sequence here)
  </pre></p>

  <p>See also the <a href="GitFAQ.shtml">JMRI Git FAQ page</a>.</p>

  <p>After the checkout is complete, go to the new directory.
  Inside, you'll find 
  directories called <tt>xml</tt>,
  <tt>resources</tt>, <tt>jython</tt>, <tt>help</tt>, <tt>lib</tt>,
  <tt>java</tt> and others.</p>

  <p>Change to the <tt>java</tt> directory.  There, you will find a <tt>src</tt>
  directory that contains the source code for JMRI itself, and a <tt>tests</tt>
  directory that contains various test routines.</p>

  <p>You can look at the code with your favorite text editor.  To
  compile and run it, you need one of the compilation tools described
  on the bar at the left: <a href="Ant.shtml">Ant</a>, <a
   href="Eclipse.shtml">Eclipse</a>, <a
   href="NetBeans.shtml">NetBeans</a>, <a
   href="JBuilder.shtml">JBuilder</a>, etc.  (Ant may be the easiest to
  install and use, and is the primary example in the documentation)</p>

  <p>Periodically, you should "commit" your changes back to the repository
  copy on your local computer. 
  That keeps your work in a separate file tree (your local repository)
  so you can undo incorrect edits, etc.
  
  <p>Eventually, you'll create some improvements that
  you'd like to contribute back to the project.  This is where Git has tremendous
  advantages; you can submit a "pull request" which will allow us to merge your
  changes back into the common source automagically.  </p>
  
  <p>
  Exactly how you do that depends a bit on what tools you're using....
  <ul>
  <li>If you've pushed your change back to GitHub, there's a button....
  <li>
  </ul>
  </p>

  <h2>Access to Old Releases</h2>

  <p>The best way to retrieve the source for releases 4.1.1 and earlier
  is from the <a href="getsvncode.shtml">SVN Repository</a>.  Please
  see those instructions for details.</p>

  <p>The best way to retrieve the source for releases 2.12 and earlier
  is from the <a href="getcvscode.shtml">CVS Repository</a>.  Please
  see those instructions for details.</p>


  <!--#include virtual="/Footer" -->

  </div><!-- closes #mainContent-->
  </div> <!-- closes #mBody-->
</body>
</html>

