<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<!-- $Id: JVMCapabilities.shtml 27924 2014-12-21 03:13:46Z jacobsen $ -->
<html lang="en">
<head>
    <TITLE>
 	JMRI: Java Version-Specific Features
    </TITLE>
    <META content="Bob Jacobsen" name=Author>
    <meta name="keywords" content="JMRI technical code road map">

    <!-- The combination of "Define" and {Header,Style, Logo and Footer} comments -->
    <!-- are an arbitrary design pattern used by the update.pl script to -->
    <!-- easily replace the common header/footer code for all the web pages -->

    <!-- delete the following 2 Defines if you want to use the default JMRI logo -->
    <!-- or change them to reflect your alternative logo -->

<!-- Style -->
  <META http-equiv=Content-Type content="text/html; charset=iso-8859-1">
  <link rel="stylesheet" type="text/css" href="/css/default.css" media="screen">
  <link rel="stylesheet" type="text/css" href="/css/print.css" media="print">
  <link rel="icon" href="/images/jmri.ico" type="image/png">
  <link rel="home" title="Home" href="/">
<!-- /Style -->
</head>

<!--#include virtual="/Header" -->
<!--#include virtual="Sidebar" -->

	<div id="mainContent">

	    <H1>JMRI: Java Version-Specific Features</H1>

This page contains information about 
the compatibility and features of various
Java versions.  We use this information
to decide on our 
<a href="TechRoadMap.shtml">road map</a>
for future JMRI versions.

<h2>Capabilities</h2>

This section lists new Java capabilities, and which Java
version they first appeared in.  The "JDK" column shows the first
Java Development Kit that could compile the featuer; the "JRE"
column lists the first runtime environment that could run the feature,
including the needed JVM and library support.
<P>
<table border="1">
<tr><th>Feature</th>        <th>JDK</th>    <th>JRE</th></tr>
<tr><td>Collections</td>    <td>1.3</td>    <td>1.3</td></tr>
<tr><td>Java2D</td>         <td>1.3</td>    <td>1.3</td></tr>
<tr><td>Printing update</td><td>1.3</td>    <td>1.3</td></tr>
<tr><td>JUnit 3.8</td>      <td>1.3</td>    <td>1.3</td></tr>

<tr><td>JDOM 1.0</td>       <td>1.4</td>    <td>1.3</td></tr>
<tr><td>Java regexp</td>    <td>1.4</td>    <td>1.4</td></tr>
<tr><td>Java3D</td>         <td>1.4</td>    <td>1.4</td></tr>
<tr><td>JavaHelp update</td><td>1.4</td>    <td>1.4</td></tr>
<tr><td>Drag and Drop</td>  <td>1.4 (additional <br>improvements in 1.6)</td><td>1.4, 1.6</td></tr>
<tr><td>Logging API</td>  <td>1.4 (additional <br>improvements in 1.6)</td><td>1.4, 1.6</td></tr>
<tr><td>XML catalog resolver</td><td>1.3?</td><td>1.4?</td></tr>

<tr><td>Annotations</td>    <td>1.5</td>    <td>1.3</td></tr>
<tr><td>JavaMail</td>       <td>1.5</td>    <td>1.3</td></tr>
<tr><td>JUnit 4.0</td>      <td>1.5</td>    <td>1.3</td></tr>
<tr><td>SwingWorker</td>    <td>1.5</td>    <td>1.5 (*1.4)</td></tr>
<tr><td>JSpinner</td>       <td>1.5</td>    <td>1.5</td></tr>
<tr><td>Enums</td>          <td>1.5</td>    <td>1.5</td></tr>
<tr><td>printf, Formatter</td><td>1.5</td>  <td>1.5</td></tr>
<tr><td>generics</td>       <td>1.5</td>    <td>1.5</td></tr>
<tr><td>Desktop class</td>  <td>1.6</td>    <td>1.6</td></tr>
<tr><td>Desktop class</td>  <td>1.6</td>    <td>1.6</td></tr>
<tr><td>JDOM2 (generics)</td><td>1.6</td><td>1.6</td></tr>
<tr><td>Toolbars</td>       <td>1.6</td><td>1.6</td></tr>
<tr><td>JTable Sorting</td> <td>1.6</td><td>1.6</td></tr>
<tr><td>Webstart compatibility</td> <td>1.6</td><td>1.6</td></tr>
<tr><td>Generics for Swing classes</td> <td>1.7</td><td>1.7</td></tr>
<tr><td>NIO improves .zip file access</td> <td>1.7</td><td>1.7</td></tr>
<tr><td>I18N I/O improvements</td> <td>1.7</td><td>1.7</td></tr>
<tr><td>Memory use and <br/>GC improvements<br/>(better performance)</td> <td>1.7</td><td>1.7</td></tr>
<tr><td>Jetty Version 9</td> <td>1.7</td><td>1.7</td></tr>
<tr><td>JUnit 4 and the <br/><code>assert</code> keyword</td> <td>1.7</td><td>1.7</td></tr>
</table>
(* indicates that a compatibility library is used in the early version)

<h2>JRE availability</h2>

This section lists the most recent Java Runtime version available
for various operating system versions.  Please note that not all
users of that operating system will have updated to this Java version;
many will be using an older one.
<p>
<a href="http://www.oracle.com/technetwork/java/javase/config-417990.html">Oracle page on Java 1.7 requirements</a>
which says "Note: As of April 8, 2014 Microsoft stopped supporting Windows XP and therefore it is no longer a supported platform."
Google finds numerous pages that show how to install Java 1.7 on XP or XP SP2.
<P>
<table border="1">
<tr><th>OS and platform</th><th>Last JRE</th></tr>
<tr><td>Linux</td><td>(depends?)</td></tr>

<tr><td>Win 8 (32-bit)                      </td><td>1.8</td></tr>
<tr><td>Win 7 (32-bit)                      </td><td>1.8</td></tr>
<tr><td>Win Vista (32-bit)                  </td><td>1.8</td></tr>
<tr><td>Win Server 2008 (32-bit)            </td><td>1.8</td></tr>
<tr><td>Win Web Server 2008 (32-bit)        </td><td>1.6</td></tr>
<tr><td>Win 2000 (32-bit)                   </td><td>1.6</td></tr>
<tr><td>Win Server 2003 (32-bit)            </td><td>1.6</td></tr>
<tr><td>Win 8 (64-bit)                      </td><td>1.8</td></tr>
<tr><td>Win Server 2012 (64-bit)            </td><td>1.8</td></tr>
<tr><td>Win Server 2012 R2 (64-bit)         </td><td>1.8</td></tr>
<tr><td>Win 7 (64-bit)                      </td><td>1.8</td></tr>
<tr><td>Win Server 2008 R2 (64-bit)         </td><td>1.8</td></tr>
<tr><td>Win Server 2008 (64-bit)            </td><td>1.7</td></tr>
<tr><td>Win Web Server 2008 R2 (64-bit)     </td><td>1.6</td></tr>
<tr><td>Win Vista (64-bit)                  </td><td>1.8</td></tr>
<tr><td>Win 2003 (64-bit)                   </td><td>1.6</td></tr>
<tr><td>Windows XP                          </td><td>1.8<br><a href="https://www.java.com/en/download/faq/winxp.xml">Unofficial<br>Support</a></td></tr>
<tr><td>Windows 98 (2nd Ed)                 </td><td>1.5-11</td></tr>
<tr><td>Windows 98                          </td><td>1.4.2_14</td></tr>
<tr><td>Windows 95                          </td><td>1.3.1_20</td></tr>


<tr><td>Mac OS X 10.7.3 and later on Intel</td><td>1.7</td></tr>
<tr><td>Mac OS X 10.5.8 and later on Intel</td><td>1.6 (Apple JVM)</td></tr>
<tr><td>Mac OS X 10.5.7 and earlier on Intel</td><td>1.5 (Apple JVM)</td></tr>
<tr><td>Mac OS X 10.3 and later on PowerPC</td><td>1.5 (Apple JVM)</td></tr>
<tr><td>MacOS "Classic"</td><td>1.1.8</td></tr>
<tr><td>OS/2</td><td>1.3</td></tr>
</table>
<P>
See the 
<A HREF="http://java.com/en/download/manual.jsp">Get Java web page</a>
for additional information.

<h2 id="JDK8">Moving to Java 1.8 from 1.6</h2>
This section discusses, roughly in order of decreasing importance, 
the process of migrating from Java 1.6 to Java 1.8.

<h3>Generics, Swing and JComboBox</h3>
Java 1.8 introduces generics for Swing objects. The most common 
one is JComboBox.  This Java 1.6 line:
<pre><code>
    JComboBox box = new JComboBox();
</code></pre>
describes the creation of a JComboBox that selects generic (Object) items.
In Java 1.8, the JComboBox holds and selects objects of a specific type, usually
String. It's written:
<pre><code>
    JComboBox<String> box = new JComboBox<String>();
</code></pre>
The most common code for getting the selected item still includes a cast:
<pre><code>
    String result = (String)box.getSelectedItem();
</code></pre>
because the JComboBox can actually contain objects of other types. (How can this 
happen? If the box is editable, and somebody enters some other type)
To avoid the case, a more robust idiom is:
<pre><code>
    String result = box.getItemAt(progBox.getSelectedIndex());
</code></pre>

<h3>JavaDoc and doclint</h3>

Java 1.8 by default runs the 
<a href="https://docs.oracle.com/javase/8/docs/technotes/tools/unix/javadoc.html#CHDFDACB">doclint</a> doclet when making JavaDoc.
By default, it is 
<a href="http://blog.joda.org/2014/02/turning-off-doclint-in-jdk-8-javadoc.html">very aggressive</a> 
on possible errors.
The default Ant-based builds turn off some of the checking
terms with
<pre><code>
-Xdoclint:all,-missing,-accessibility,-html,-syntax
</code></pre>
to drop tests for missing JavaDoc tags and certain benign HTML errors. (For now)





<!--#include virtual="/Footer" -->

	  </div><!-- closes #mainContent-->
	</div> <!-- closes #mBody-->
</body>
</html>

