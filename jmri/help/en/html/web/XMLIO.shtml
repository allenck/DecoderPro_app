<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html lang="en">
<head>
<!-- Copyright 2008 -->
<!-- $Id: XMLIO.shtml 27263 2014-09-21 00:42:15Z jacobsen $ -->
<title>JMRI: XML IO Servlet</title>

<!-- Style -->
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link rel="stylesheet" type="text/css" href="/css/default.css" media="screen">
<link rel="stylesheet" type="text/css" href="/css/print.css" media="print">
<link rel="icon" href="/images/jmri.ico" TYPE="image/png">
<link rel="home" title="Home" href="/">
<!-- /Style -->
</head>

<body>
<!--#include virtual="/Header" -->

<!--#include virtual="Sidebar" -->
<div id="mainContent">

<h1> 
JMRI: XML IO Servlet
</h1>

<strong>The XML IO protocol is deprecated and support will be removed from JMRI
    during the 3.11 development cycle.</strong> Affected applications should
    be ported to using the <a href="JsonServlet.shtml">JSON protocol</a>.
<p>
The JMRI XML Servlet provides bidirectional web access to JMRI services.

<p>
The servlet lives in the 
<a href="http://jmri.org/JavaDoc/doc/jmri/web/servlet/xmlio/package-summary.html">jmri.web.servlet.xmlio</a>
package, and provides web access to the
<a href="http://jmri.org/JavaDoc/doc/jmri/web/xmlio/package-summary.html">JMRI XML IO package</a>.
By default, the JMRI Web Server will send any URL that starts with /xmlio to this servlet.  It will list all 
known elements of a specified type, accept changes to the value/state of elements, and respond with 
current value/state of elements.  If sent a list of elements with current values, it will "monitor" for changes
to any of those elements, returning the new values.</p>

Element types fully supported:<ul>
<li>power</li>
<li>turnout</li>
<li>sensor</li>
<li>signalhead</li>
<li>signalmast</li>
<li>memory</li>
<li>route</li>
</ul>
Element types list-only:<ul>
<li>roster</li>
<li>frame</li>
<li>panel</li>
<li>metadata</li>
<li>railroad</li>
</ul>
Throttle is a unique case, slightly different syntax, supports read and change, but not list or monitoring:<ul>
<li>throttle</li>
</ul>
There are several sample pages that show how this can be used:
<dl>
<dt><a href="http://localhost:12080/web/request.html">web/request.html</a>
<dd>Makes a single XML request for all available sensors, and shows their status in a table.
<dt><a href="http://localhost:12080/web/monitor.html">web/monitor.html</a>
<dd>Uses delayed requests to monitor the status of all sensors, 
updating a table when any change.
<dt><a href="http://localhost:12080/web/throttle.html">web/throttle.html</a>
<dd>Sends a speed command to a DCC locomotive on the layout when a button is pressed.
<dt><a href="http://localhost:12080/web/turnoutPanel.html">web/turnoutPanel.html</a>
<dd>Example of a control panel on a web page.
<dt><a href="http://localhost:12080/web/turnoutPanel.html">web/turnoutMonitor.html</a>
<dd>More complex turnout table, with buttons to throw and close turnouts.
<dt><a href="http://localhost:12080/web/JMRI_XMLIO_test.html">web/JMRI_XMLIO_test.html</a> 
<dd>Useful for sending various commands to xmlio server and viewing the responses.
<dt><a href="http://localhost:12080/web/JMRIMobile.html">web/JMRIMobile.html</a>
<dd>This tool uses the xmlio server for retrieving data from JMRI, sending changes and monitoring for changes to elements.
</dl>

<p>
Please note that this servlet has only been used with 
the 
<a href="WebServer.shtml">JMRI Web Server</a>, and may
not work with other servlet containers.  We're committed to
making it work, however, so just get in touch with 
the JMRI developers if you encounter any problems.

<h2>Request Format</h2>

<p>The XML schema is defined in the 
<a href="http://jmri.org/xml/schema/xmlio.xsd">xmlio.xsd schema document</a>.</p>
<p>There is also an attribute-based syntax available.  (see status examples below)  The xmlio server responds with the same syntax as the request uses.</p>

<p>Below are some example requests and responses.

<h3>Get the status of individual objects</h3>

Request:

<code><pre>
&lt;xmlio&gt;
  &lt;item&gt;
    &lt;type&gt;turnout&lt;/type&gt;
    &lt;name&gt;IT12&lt;/name&gt;
  &lt;/item&gt;
  &lt;item&gt;
    &lt;type&gt;sensor&lt;/type&gt;
    &lt;name&gt;West sensor&lt;/name&gt;
  &lt;/item&gt;
  &lt;item&gt;
    &lt;type&gt;power&lt;/type&gt;
    &lt;name&gt;power&lt;/name&gt;
  &lt;/item&gt;
&lt;/xmlio&gt;
</pre></code>

Reply:
<code><pre>
&lt;xmlio&gt;
  &lt;item&gt;
    &lt;type&gt;turnout&lt;/type&gt;
    &lt;name&gt;IT12&lt;/name&gt;
    &lt;value&gt;2&lt;/value&gt;
  &lt;/item&gt;
  &lt;item&gt;
    &lt;type&gt;sensor&lt;/type&gt;
    &lt;name&gt;West sensor&lt;/name&gt;
    &lt;value&gt;4&lt;/value&gt;
  &lt;/item&gt;
  &lt;item&gt;
    &lt;type&gt;power&lt;/type&gt;
    &lt;name&gt;power&lt;/name&gt;
    &lt;value&gt;2&lt;/value&gt;
  &lt;/item&gt;
&lt;/xmlio&gt;
</pre></code>

The "value" element is inserted in the request, and then it's 
returned as the reply.  You can just turn the reply around and use it 
as another request.  If "value" elements are present for all items,
the response will only be returned when one or more of the included
item's state has changed to something different.

<h3>Get all objects of a type</h3>

Request:

<code><pre>
&lt;xmlio&gt;
  &lt;list&gt;
    &lt;type&gt;sensor&lt;/type&gt;
  &lt;/list&gt;
&lt;/xmlio&gt;
</pre></code>

Reply:
<code><pre>
&lt;xmlio&gt;
  &lt;item&gt;
    &lt;type&gt;sensor&lt;/type&gt;
    &lt;name&gt;IS1&lt;/name&gt;
    &lt;value&gt;2&lt;/value&gt;
  &lt;/item&gt;
  &lt;item&gt;
    &lt;type&gt;sensor&lt;/type&gt;
    &lt;name&gt;IS2&lt;/name&gt;
    &lt;value&gt;4&lt;/value&gt;
  &lt;/item&gt;
  &lt;item&gt;
    &lt;type&gt;sensor&lt;/type&gt;
    &lt;name&gt;West sensor&lt;/name&gt;
    &lt;value&gt;2&lt;/value&gt;
  &lt;/item&gt;
&lt;/xmlio&gt;
</pre></code>

The response can be turned around and used as the next request.

<h3>Set the status of an object</h3>

Request:

<code><pre>
&lt;xmlio&gt;
  &lt;item&gt;
    &lt;type&gt;turnout&lt;/type&gt;
    &lt;name&gt;IT12&lt;/name&gt;
    &lt;set&gt;2&lt;/set&gt;
  &lt;/item&gt;
&lt;/xmlio&gt;
</pre></code>

Reply:
<code><pre>
&lt;xmlio&gt;
  &lt;item&gt;
    &lt;type&gt;turnout&lt;/type&gt;
    &lt;name&gt;IT12&lt;/name&gt;
    &lt;value&gt;2&lt;/value&gt;
  &lt;/item&gt;
&lt;/xmlio&gt;
</pre></code>

The "set" element in the request results in the state
being set to the given value, and then it's 
returned in the reply as a value element with the 
proper value at that point.

<p>
All writes are done before the values are collected for any reads,
but there is no guarantee that the consequences of the writes
have propagated completely.

<h3>Set the status of an object (attribute-based syntax)</h3>

Request:
<code><pre>
&lt;turnout name="IT12" set="2" /&gt;
</pre></code>
Reply:
<code><pre>
&lt;turnout name="IT12" value="2" /&gt;
</pre></code>

<h3>Control a Throttle</h3>

A &lt;throttle&gt; element
can be used to control a DCC Throttle via the
default ThrottleManager.  The first use 
allocates the throttle, and all later ones
set any attributes present:

<code><pre>
&lt;xmlio&gt;
    &lt;throttle&gt;
        &lt;address&gt;1234&lt;/address&gt;
        &lt;speed&gt;0.75&lt;/speed&gt;
        &lt;forward&gt;true&lt;/forward&gt;
        &lt;F3&gt;false&lt;/F3&gt;
    &lt;/throttle&gt;
&lt;/xmlio&gt;

</pre></code>

A throttle element is returned unchanged.

<h2>Related Documentation</h2>

C.F. K H Wolf, K Froitzheim, M Weber,
Department of Distributed Systems, University of Ulm, 
"Interactive Video and Remote Control via the World Wide Web", 
in "Lecture Notes in Computer Science", Springer, Berlin, 1996.
<br>
Previously in Volume 7, Number 5 of "Marklin Digital Newsletter", 
Dr. T Catherall Ed, September/October 1995, 
<a href="http://web.archive.org/web/*/http://rr-vs.informatik.uni-ulm.de/rr/">page referenced</a>
<a href="http://rr.informatik.tu-freiberg.de/index.php?con=home&sel=&lang=eng&js=1&">rehosted</a>.

</div>
<!--#include virtual="/Footer" -->
</body>
</html>
