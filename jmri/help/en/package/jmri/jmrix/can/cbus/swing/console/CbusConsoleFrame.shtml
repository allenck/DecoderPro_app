<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<!-- $Id: CbusConsoleFrame.shtml 27263 2014-09-21 00:42:15Z jacobsen $ -->
<html lang="en">
<head>
 <TITLE>
      JMRI: CBUS Console Window
 </TITLE>
    <META http-equiv=Content-Type content="text/html; charset=iso-8859-1">
    <META content="Bob Jacobsen" name=Author>
    <META name="keywords" content="JMRI help monitor">

<!-- Style -->
  <META http-equiv=Content-Type content="text/html; charset=iso-8859-1">
  <link rel="stylesheet" type="text/css" href="/css/default.css" media="screen">
  <link rel="stylesheet" type="text/css" href="/css/print.css" media="print">
  <link rel="icon" href="/images/jmri.ico" type="image/png">
  <link rel="home" title="Home" href="/">
<!-- /Style -->
</head>

<body>
<!--#include virtual="/Header" -->
  <div class="nomenu" id="mBody">
    <div id="mainContent">

<H1>CBUS Console Window
</H1>
    
<a href="../../../../../../../html/hardware/can/images/console.jpg">
    <img src="../../../../../../../html/hardware/can/images/console.jpg"
         width="443" height="265"
         alt="Console Tool Screen" align="right"></a>
<br>

JMRI provides a communications monitor window so you can see what's happening
on the communications link between the program and the layout CBUS.

<p>
Once you open a monitor window, it will automatically
display all traffic on the link in the two sections
at the top of the window.  The left part contains the
raw CAN frames.  The right part interprets their 
CBUS meaning.

<h2>Logging To A File</h2>

Sometimes, it's helpful to capture what's happening. For example,
you might encounter a bug (!!), and want to send a copy of what's 
happening to the people who are trying to fix it.
<p>
Small amounts of data can be copied from the log window with 
your computers "copy" command (e.g. ctrl-C or cmd-C), and then
pasted into an email.
<p>
If you want to capture more, you can have the window write a 
log file on your computer's disk.  To do this:
<ol>
<li>Click "Choose log file".  A file-chooser window
will open.  Navigate to where you want to store the file,
enter a name for the new log file, and click "Save". Note that
if you pick a file that already exists, it will be overwritten.
<li>When you're ready to capture the data you want, click
"Start logging" on the monitor window.
<li>When you're done, click "Stop logging" to store the data
and close the file.
</ol>

<h3>Controls</h3>

<dl>
<dt>Clear Screen</dt>
  <dd>Erases the log area at the top of the screen.
  </dd>
<dt>Freeze Screen</dt>
  <dd>Stops acquiring new information, so that the captured information stops scrolling up.
  </dd>
<dt>Show timestamps</dt>
  <dd>Normally, the program just displays the data from the communication link.
  If you'd like each message to be preceeded by the time it was sent or
  received, check this box.
  </dd>
<dt>Show priorities</dt>
  <dd>If you'd like each message to be preceeded by the CBUS priorities used in
	sending the message, check this box.
  </dd>
<dt>Add Message</dt>
  <dd>If you'd like to annotate the message log with your own comments, Enter a
	comment and click the Add message button.
  </dd>
</dl>

<h2>Packet Statistics</h2>

This part of the window shows the number of CBUS packets received and transmitted
and controls the format of the display.

<h3>Controls</h3>

<dl>
<dt>Clear</dt>
  <dd>Resets the packet counts to zero.
	</dd>
<dt>Decimal Data Entry/Display</dt>
  <dd>Normally, the Console window displays data in hexadecimal and treats data
	entered as hexadecimal. To change the default to decimal, check this box.
	</dd>
</dl>

<h2>Most Recently Received Packet</h2>

This displays the most recent packet received from the layout. The individual
elements displayed are dynamic and minor priority, the first data byte which is 
the CBUS opcode and the remaining, up to seven, data bytes.

<h3>Controls</h3>

<dl>
<dt>Copy</dt>
  <dd>Copies the most recently received packet into the send packet data fields.
	</dd>
</dl>

<h2>Send Packet</h2>

Here you can construct a packet to be sent to the layout. For normal operation,
do not edit the preloaded values in the dynamic and normal priority fields.
Enter the opcode and the correct number of data bytes (depending upon the
opcode).
<p>
If the decimal data entry/display checkbox is not selected then data entry will,
by default, be treated as hexadecimal. If the decimal data entry/display checkbox
is selected then data entry will, by default, be treated as hexadecimal.  
<p>
At any time, you may force data entered to be treated as hexadecimal, decimal
or binary by adding a "0x", "0d" or "0b" prefix. For example "0x20", "0d32"
and "0b00100000" all donate a decimal value of 32.
<p>
Additionally, when the decimal data entry/display checkbox is not selected 
(hexadecimal mode), any value with three or more digits will be
treated as binary. When the decimal data entry/display checkbox is selected 
(decimal mode), any value with four or more digits will be treated as binary.

<h3>Controls</h3>

<dl>
<dt>Send</dt>
  <dd>Checks the packet entered and sends it to the layout or reports any error
	condition detected (e.g. the number of data bytes does not match the opcode).
	</dd>
<dt>Clear</dt>
  <dd>Clears the data entry fields and preloads the priority values.
	</dd>
</dl>


<!--#include virtual="/Footer" -->
</body>
</html>

