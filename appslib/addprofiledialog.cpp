#include "addprofiledialog.h"
#include "jframe.h"
#include <QPushButton>
#include <QLabel>
#include "jtextfield.h"
#include "profilemanager.h"
#include <QBoxLayout>
#include "file.h"
#include "fileutil.h"
#include "jfilechooser.h"
#include "profile.h"
#include "jseparator.h"
#include "joptionpane.h"
#include "loggerfactory.h"

//AddProfileDialog::AddProfileDialog(QWidget *parent) :
//  JDialog(parent)
//{
//}
/**
 * Add a new {@link Profile} to JMRI.
 *
 * @author Randall Wood
 */
///*public*/ class AddProfileDialog extends javax.swing.JDialog {

/**
 *
 */

/*public*/ AddProfileDialog::AddProfileDialog(QFrame* parent, bool modal, bool setNextProfile) :
  JDialog(parent)
{
    //super(parent, modal);
    this->setNextProfile = setNextProfile;
    initComponents();
}

AddProfileDialog::AddProfileDialog(QWidget* parent, bool modal, bool setNextProfile) :
  JDialog(parent) {
    //super(parent, modal);
    this->setNextProfile = setNextProfile;
    initComponents();
}

/**
 * This method is called from within the constructor to initialize the form.
 * WARNING: Do NOT modify this code. The content of this method is always
 * regenerated by the Form Editor.
 */
//@SuppressWarnings("unchecked")
// <editor-fold defaultstate="collapsed" desc="Generated Code">
/*private*/ void AddProfileDialog::initComponents()
{

 setNextProfile = false;
 source = NULL;
    lblProfileNameAndLocation = new QLabel ();
    jSeparator2 = new JSeparator ();
    profileName = new JTextField ();
    lblProfileName = new QLabel ();
    lblProfileLocation = new QLabel ();
    profileLocation = new JTextField ();
    profileFolder = new JTextField ();
    btnBrowse = new QPushButton();
    lblProfileFolder = new QLabel ();
    jSeparator1 = new JSeparator ();
    btnCancel = new QPushButton();
    btnOk = new QPushButton();

    setDefaultCloseOperation(JFrame::DISPOSE_ON_CLOSE);
//    ResourceBundle bundle = ResourceBundle.getBundle("jmri/profile/Bundle"); // NOI18N
    setTitle(tr("New Profile")); // NOI18N
    setMinimumSize( QSize(413, 239));
    QFont f = lblProfileNameAndLocation->font();
    f.setWeight(QFont::Bold);
    //lblProfileNameAndLocation.setFont(lblProfileNameAndLocation.font().deriveFont(lblProfileNameAndLocation.getFont().getStyle() | Font.BOLD));
    lblProfileNameAndLocation->setFont(f);
    lblProfileNameAndLocation->setText(tr("Name and Location")); // NOI18N

    profileName->setText("");
//    profileName.getDocument().addDocumentListener(new DocumentListener() {
//        /*public*/ void changedUpdate(DocumentEvent e) {
//            profileNameActionPerformed(NULL);
//        }
//        /*public*/ void insertUpdate(DocumentEvent e) {
//            profileNameActionPerformed(NULL);
//        }
//        /*public*/ void removeUpdate(DocumentEvent e) {
//            profileNameActionPerformed(NULL);
//        }
//    });
    connect(profileName, SIGNAL(editingFinished()), this, SLOT(profileNameActionPerformed()));
//    profileName.addActionListener(new ActionListener() {
//        /*public*/ void actionPerformed(ActionEvent evt) {
//            profileNameActionPerformed(evt);
//        }
//    });
//    profileName.addFocusListener(new FocusAdapter() {
//        /*public*/ void focusLost(FocusEvent evt) {
//            profileNameFocusLost(evt);
//        }
//    });
    connect(profileName, SIGNAL(leaveField()), this, SLOT(profileLocationActionPerformed()));
//    profileName.addKeyListener(new KeyAdapter() {
//        /*public*/ void keyTyped(KeyEvent evt) {
//            profileLocationActionPerformed(evt);
//        }
//    });
    connect(profileName, SIGNAL(textEdited(QString)), this, SLOT(profileNameActionPerformed()));

    lblProfileName->setText(tr("Profile Name:")); // NOI18N

    lblProfileLocation->setText(tr("Profile Location:")); // NOI18N

    profileLocation->setText(ProfileManager::defaultManager()->getDefaultSearchPath()->getPath());
    profileLocation->setMinimumSize( QSize(14, 128));
//    profileLocation.addFocusListener(new FocusAdapter() {
//        /*public*/ void focusLost(FocusEvent evt) {
//            profileLocationFocusLost(evt);
//        }
//    });
    connect(profileLocation, SIGNAL(leaveField()), this, SLOT(profileLocationActionPerformed()));
//    profileLocation.addActionListener(new ActionListener() {
//        /*public*/ void actionPerformed(ActionEvent evt) {
//            profileLocationActionPerformed(evt);
//        }
//    });
    connect(profileLocation, SIGNAL(editingFinished()), this, SLOT(profileLocationActionPerformed()));
//    profileLocation.addKeyListener(new KeyAdapter() {
//        /*public*/ void keyTyped(KeyEvent evt) {
//            profileLocationKeyTyped(evt);
//        }
//    });
    connect(profileLocation, SIGNAL(textEdited(QString)), this, SLOT(profileNameActionPerformed()));

    profileFolder->setText(ProfileManager::defaultManager()->getDefaultSearchPath()->getPath());
//    profileFolder.addActionListener(new ActionListener() {
//        /*public*/ void actionPerformed(ActionEvent evt) {
//            profileFolderActionPerformed(evt);
//        }
//    });
    connect(profileFolder, SIGNAL(editingFinished()), this, SLOT(profileFolderActionPerformed()));

    btnBrowse->setText(tr("Browse...")); // NOI18N
//    btnBrowse.addActionListener(new ActionListener() {
//        /*public*/ void actionPerformed(ActionEvent evt) {
//            btnBrowseActionPerformed(evt);
//        }
//    });
    connect(btnBrowse, SIGNAL(clicked()), this, SLOT(btnBrowseActionPerformed()));

    lblProfileFolder->setText(tr("Profile Folder:")); // NOI18N

    btnCancel->setText(tr("Cancel")); // NOI18N
//    btnCancel.addActionListener(new ActionListener() {
//        /*public*/ void actionPerformed(ActionEvent evt) {
//            btnCancelActionPerformed(evt);
//        }
//    });
    connect(btnCancel, SIGNAL(clicked()), this, SLOT(btnCancelActionPerformed()));

    btnOk->setText(tr("OK")); // NOI18N
//    btnOk.addActionListener(new ActionListener() {
//        /*public*/ void actionPerformed(ActionEvent evt) {
//            btnOkActionPerformed(evt);
//        }
//    });
    connect(btnOk, SIGNAL(clicked()), this, SLOT(btnOkActionPerformed()));

//    GroupLayout layout = new GroupLayout(getContentPane());
//    getContentPane().setLayout(layout);
//    layout.setHorizontalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
//        .addGroup(layout.createSequentialGroup()
//            .addContainerGap()
//            .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
//                .addComponent(jSeparator2)
//                .addGroup(layout.createSequentialGroup()
//                    .addGap(6, 6, 6)
//                    .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
//                        .addGroup(layout.createSequentialGroup()
//                            .addComponent(lblProfileName)
//                            .addGap(24, 24, 24)
//                            .addComponent(profileName, GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE))
//                        .addGroup(layout.createSequentialGroup()
//                            .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
//                                .addComponent(lblProfileLocation)
//                                .addComponent(lblProfileFolder))
//                            .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
//                            .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
//                                .addComponent(profileFolder)
//                                .addComponent(profileLocation, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
//                    .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
//                    .addComponent(btnBrowse))
//                .addGroup(layout.createSequentialGroup()
//                    .addComponent(lblProfileNameAndLocation)
//                    .addGap(0, 0, Short.MAX_VALUE))
//                .addComponent(jSeparator1)
//                .addGroup(GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
//                    .addGap(0, 0, Short.MAX_VALUE)
//                    .addComponent(btnOk)
//                    .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
//                    .addComponent(btnCancel)))
//            .addContainerGap())
//    );
//    layout.setVerticalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
//        .addGroup(layout.createSequentialGroup()
//            .addContainerGap()
//            .addComponent(lblProfileNameAndLocation)
//            .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
//            .addComponent(jSeparator2, GroupLayout.PREFERRED_SIZE, 10, GroupLayout.PREFERRED_SIZE)
//            .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
//            .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
//                .addComponent(profileName, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
//                .addComponent(lblProfileName))
//            .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
//            .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
//                .addComponent(profileLocation, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
//                .addComponent(btnBrowse)
//                .addComponent(lblProfileLocation))
//            .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
//            .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
//                .addComponent(profileFolder, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
//                .addComponent(lblProfileFolder))
//            .addGap(18, 18, 18)
//            .addComponent(jSeparator1, GroupLayout.PREFERRED_SIZE, 10, GroupLayout.PREFERRED_SIZE)
//            .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
//            .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
//                .addComponent(btnCancel)
//                .addComponent(btnOk))
//            .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
//    );
    QVBoxLayout* thisLayout = new QVBoxLayout;
    this->setLayout(thisLayout);
    thisLayout->addWidget(lblProfileNameAndLocation);
    this->layout()->addWidget(jSeparator2);
    QHBoxLayout* l1= new QHBoxLayout();
    l1->addWidget(profileName);
    l1->addWidget(lblProfileName);
    thisLayout->addLayout(l1);
    thisLayout->addWidget(profileLocation);
    QHBoxLayout* l2 = new QHBoxLayout;
    l2->addWidget(btnBrowse);
    l2->addWidget(lblProfileLocation);
    thisLayout->addLayout(l2);
    QHBoxLayout* l3 = new QHBoxLayout;
    l3->addWidget(profileFolder);
    l3->addWidget(lblProfileFolder);
    thisLayout->addLayout(l3);
    thisLayout->addWidget(jSeparator1);
    QHBoxLayout* l4 = new QHBoxLayout;
    l4->addWidget(btnCancel);
    l4->addWidget(btnOk);
    thisLayout->addLayout(l4);
    //pack();
    adjustSize();
}// </editor-fold>

/*private*/ void AddProfileDialog::profileNameActionPerformed(JActionEvent* )
{
 QString location = this->profileLocation->text();
 if (!location.endsWith(File::separator)) {
     location = location + File::separator;
 }
 this->profileId = FileUtil::sanitizeFilename(this->profileName->text());
 this->profileFolder->setText(location + this->profileId);
}

/*private*/ void AddProfileDialog::btnBrowseActionPerformed(JActionEvent* )
{
 JFileChooser* chooser = new JFileChooser(this->profileLocation->text());
 chooser->setFileSelectionMode(JFileChooser::DIRECTORIES_ONLY);
 // TODO: Use NetBeans OpenDialog if its availble
 if (chooser->showOpenDialog(this) == JFileChooser::APPROVE_OPTION)
 {
  try
  {
   this->profileLocation->setText(chooser->getSelectedFile()->getCanonicalPath());
   this->profileNameActionPerformed();
  } catch (IOException ex) {
      Logger::error("Error selecting profile location", ex);
  }
 }
}

/*private*/ void AddProfileDialog::profileFolderActionPerformed(JActionEvent* ) {
    this->profileNameActionPerformed();
}

/*private*/ void AddProfileDialog::profileLocationActionPerformed(JActionEvent* ) {
    this->profileNameActionPerformed();
}

/*private*/ void AddProfileDialog::btnCancelActionPerformed(JActionEvent* )
{
 this->reject();
 this->close();
}

/*private*/ void AddProfileDialog::btnOkActionPerformed(JActionEvent* evt)
{
 try
 {
  setCursor(Qt::WaitCursor);
  Profile* p = new Profile(this->profileName->text(), this->profileId, new File(this->profileFolder->text()));
ProfileManager::defaultManager()->addProfile(p);
  if (this->source != NULL)
  {
   // TODO: if source is active profile, save source first
   FileUtil::copy(source->getPath(), p->getPath());
   p->save();
  }
  if (this->setNextProfile)
  {
   ProfileManager::defaultManager()->setNextActiveProfile(p);
  }
  else {
   ProfileManager::defaultManager()->setActiveProfile(p);
  }
  ProfileManager::getDefault()->saveActiveProfile(p, ProfileManager::getDefault()->isAutoStartActiveProfile());
  if (this->source != NULL)
  {
   log->info(tr("Created profile \"%1\" by copying profile \"%2\"").arg(p->getName()).arg( this->source->getName()));
  }
  else
  {
   log->info(tr("Created new profile \"%1\"").arg(p->getName()));
  }
  this->setCursor(Qt::ArrowCursor);
  //this->dispose();
  this->accept();
  this->close();
 }
 catch (IOException /*IllegalArgumentException*/ ex)
 {
//        JOptionPane.showMessageDialog(this, ex.getLocalizedMessage(), "Error Creating Profile", JOptionPane.ERROR_MESSAGE);
  log->error("Error saving profile", ex);
 }
 catch (IllegalArgumentException ex)
 {
  JOptionPane::showMessageDialog(this, ex.getLocalizedMessage(), "Error Creating Profile", JOptionPane::ERROR_MESSAGE);
  log->error("Error saving profile", ex);
 }
}

///*private*/ void profileNameKeyTyped(KeyEvent evt) {
//    this->profileNameActionPerformed(NULL);
//}

///*private*/ void profileNameFocusLost(FocusEvent evt) {
//    this->profileNameActionPerformed(NULL);
//}

///*private*/ void profileLocationKeyTyped(KeyEvent evt) {
//    this->profileNameActionPerformed(NULL);
//}

///*private*/ void profileLocationFocusLost(FocusEvent evt) {
//    this->profileNameActionPerformed(NULL);
//}


void AddProfileDialog::setSourceProfile(Profile* profile) {
    this->source = profile;
    this->setTitle(tr("Copy Profile"));
}

/*private*/ /*static*/ /*final*/ Logger* AddProfileDialog::log = LoggerFactory::getLogger("AddProfileDialog");
