#include "printmoreoptionpanel.h"
#include "control.h"
#include <QBoxLayout>
#include "gridbaglayout.h"
#include <jtextfield.h>
#include <QPushButton>
#include <QGroupBox>

namespace Operations
{
 /**
  * Frame for user edit of additional manifest print options
  *
  * @author Dan Boudreau Copyright (C) 2012
  * @version $Revision: 21846 $
  */
 ///*public*/ class PrintMoreOptionPanel extends OperationsPreferencesPanel {

 /**
  *
  */
 //private static final long serialVersionUID = -5124421051550630914L;
 //private static final Logger log = LoggerFactory.getLogger(OperationsSetupFrame.class);

 /*public*/ PrintMoreOptionPanel::PrintMoreOptionPanel(QWidget* parent)
     : OperationsPanel(parent)
 {

     // the following code sets the frame's initial state
     setLayout(new QVBoxLayout);//(this, BoxLayout.Y_AXIS));

     // row 1 font type and size
     QWidget* p1 = new QWidget();
     p1->setLayout(new QVBoxLayout);//(p1, BoxLayout.Y_AXIS));

     QGroupBox* pTab = new QGroupBox();
     pTab->setLayout(new QHBoxLayout);
    // pTab.setBorder(BorderFactory.createTitledBorder(Bundle.getMessage("BorderLayoutTab1")));
     pTab->layout()->addWidget(tab1TextField);
     p1->layout()->addWidget(pTab);

     JPanel pTab2 = new JPanel();
     pTab2.setBorder(BorderFactory.createTitledBorder(Bundle.getMessage("BorderLayoutTab2")));
     pTab2.add(tab2TextField);
     p1.add(pTab2);

     JPanel pTab3 = new JPanel();
     pTab3.setBorder(BorderFactory.createTitledBorder(Bundle.getMessage("BorderLayoutTab3")));
     pTab3.add(tab3TextField);
     p1.add(pTab3);

     tab1TextField.setText(Integer.toString(Setup.getTab1Length()));
     tab2TextField.setText(Integer.toString(Setup.getTab2Length()));
     tab3TextField.setText(Integer.toString(Setup.getTab3Length()));

     // add tool tips
     saveButton.setToolTipText(Bundle.getMessage("SaveToolTip"));

     // row 11
     JPanel pControl = new JPanel();
     pControl.setBorder(BorderFactory.createTitledBorder(""));
     pControl.setLayout(new GridBagLayout());
     addItem(pControl, saveButton, 0, 0);

     add(p1);
     add(pControl);

     // setup buttons
     addButtonAction(saveButton);

     initMinimumSize(QSize(Control::panelWidth300, Control::panelHeight400));
 }

 // Save buttons
 //@Override
 /*public*/ void buttonActionPerformed(QWidget* ae) {
     if (ae.getSource() == saveButton) {
         this.savePreferences();
         if (Setup.isCloseWindowOnSaveEnabled()) {
             dispose();
         }
     }
 }

 //@Override
 /*public*/ QString getTabbedPreferencesTitle() {
     return tr("Print More Options");
 }

 //@Override
 /*public*/ QString getPreferencesTooltip() {
     return null;
 }

 //@Override
 /*public*/ void savePreferences() {

     try {
         Setup.setTab1length(Integer.parseInt(tab1TextField.getText()));
         Setup.setTab2length(Integer.parseInt(tab2TextField.getText()));
         Setup.setTab3length(Integer.parseInt(tab3TextField.getText()));
     } catch (Exception e) {
         log.error("Tab wasn't a number");
     }

     OperationsSetupXml.instance().writeOperationsFile();

     // recreate all train manifests
     TrainManager.instance().setTrainsModified();
 }

 //@Override
 /*public*/ bool isDirty() {
     try {
         return (Setup.getTab1Length() != Integer.parseInt(tab1TextField.getText())
                 || Setup.getTab2Length() != Integer.parseInt(tab2TextField.getText())
                 || Setup.getTab3Length() != Integer.parseInt(tab3TextField.getText()));
     } catch (Exception e) {
         log.error("Tab wasn't a number");
     }
     return true;
 }
}
