#include "frmdefaults.h"
#include "commonsubs.h"
#include "jformattedtextfield.h"
#include "spinnernumbermodel.h"
#include "box.h"

/**
 *
 * @author Gregory J. Bedlek Copyright (C) 2018, 2019
 */
///*public*/ class FrmDefaults extends JFrame {

    /*private*/ /*static*/ /*final*/ QString FrmDefaults::FORM_PROPERTIES = "DlgDefaults";    // NOI18N

    /*private*/ void FrmDefaults::initOrig(ProgramProperties* programProperties, OtherData* otherData) {
        _mSIDI_CodingTimeInMillisecondsOrig = programProperties->_mSIDI_CodingTimeInMilliseconds;
        _mSIDI_TimeLockingTimeInMillisecondsOrig = programProperties->_mSIDI_TimeLockingTimeInMilliseconds;
        _mSWDI_CodingTimeInMillisecondsOrig = programProperties->_mSWDI_CodingTimeInMilliseconds;
        _mTUL_EnabledAtStartupOrig = otherData->_mTUL_EnabledAtStartup;
        _mCodeButtonDelayTimeOrig = programProperties->_mCodeButtonDelayTime;
        _mSignalSystemTypeOrig = otherData->_mSignalSystemType;
        _mTUL_SecondsToLockTurnoutsOrig = otherData->_mTUL_SecondsToLockTurnouts;
    }

    /*private*/ bool FrmDefaults::dataChanged() {
        if (CommonSubs::getIntFromJTextFieldNoThrow(_mSIDI_CodingTimeInMilliseconds) != _mSIDI_CodingTimeInMillisecondsOrig) return true;
        if (CommonSubs::getIntFromJTextFieldNoThrow(_mSIDI_TimeLockingTimeInMilliseconds) != _mSIDI_TimeLockingTimeInMillisecondsOrig) return true;
        if (CommonSubs::getIntFromJTextFieldNoThrow(_mSWDI_CodingTimeInMilliseconds) != _mSWDI_CodingTimeInMillisecondsOrig) return true;
        if (_mTUL_EnabledAtStartupOrig != _mTUL_EnabledAtStartup->isChecked()) return true;
        if (CommonSubs::getIntFromJTextFieldNoThrow(_mCodeButtonDelayTime) != _mCodeButtonDelayTimeOrig) return true;
        if (_mSignalSystemTypeOrig != OtherData::SIGNAL_SYSTEM_TYPE::getSignalSystemType(_mSignalSystemType)) return true;
        if (_mTUL_SecondsToLockTurnoutsOrig != (int)_mTUL_SecondsToLockTurnouts->value()) return true;
        return false;
    }

    /*public*/ FrmDefaults::FrmDefaults(AwtWindowProperties* awtWindowProperties, ProgramProperties* programProperties, OtherData* otherData, QWidget* parent) : JFrame(parent){
        //super();
        initComponents();
        CommonSubs::addHelpMenu(this, "package.jmri.jmrit.ctc.CTC_menuCfgDef", true);  // NOI18N
        _mAwtWindowProperties = awtWindowProperties;
        _mProgramProperties = programProperties;
        _mOtherData = otherData;
        CommonSubs::numberButtonGroup(_mSignalSystemType);
        CommonSubs::setButtonSelected(_mSignalSystemType, _mOtherData->_mSignalSystemType.getInt());
        _mTUL_SecondsToLockTurnouts->setModel(new SpinnerNumberModel(otherData->_mTUL_SecondsToLockTurnouts, 0, 32767, 1));
        CommonSubs::setMillisecondsEdit(_mSIDI_CodingTimeInMilliseconds);
        CommonSubs::setMillisecondsEdit(_mSWDI_CodingTimeInMilliseconds);
        CommonSubs::setMillisecondsEdit(_mSIDI_TimeLockingTimeInMilliseconds);
        CommonSubs::setMillisecondsEdit(_mCodeButtonDelayTime);
        _mSIDI_CodingTimeInMilliseconds->setText(QString::number(programProperties->_mSIDI_CodingTimeInMilliseconds));
        _mSIDI_TimeLockingTimeInMilliseconds->setText(QString::number(programProperties->_mSIDI_TimeLockingTimeInMilliseconds));
        _mSWDI_CodingTimeInMilliseconds->setText(QString::number(programProperties->_mSWDI_CodingTimeInMilliseconds));
        _mTUL_EnabledAtStartup->setChecked(_mOtherData->_mTUL_EnabledAtStartup);
        _mCodeButtonDelayTime->setText(QString::number(programProperties->_mCodeButtonDelayTime));
        initOrig(_mProgramProperties, _mOtherData);
        _mAwtWindowProperties->setWindowState(this, FORM_PROPERTIES);
        //this.getRootPane().setDefaultButton(_mSaveAndClose);
        _mSaveAndClose->setDefault(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    /*private*/ void FrmDefaults::initComponents() {

        _mSignalSystemType = new QButtonGroup(this);
        _mSWDI_CodingTimeInMilliseconds = new JFormattedTextField();
        _mSIDI_CodingTimeInMilliseconds = new JFormattedTextField();
        jLabel19 = new JLabel();
        _mSIDI_TimeLockingTimeInMilliseconds = new JFormattedTextField();
        jLabel22 = new JLabel();
        jLabel27 = new JLabel();
        _mSaveAndClose = new JButton();
        jLabel18 = new JLabel();
        jLabel17 = new JLabel();
        jLabel23 = new JLabel();
        _mTUL_EnabledAtStartup = new JCheckBox();
        jLabel1 = new JLabel();
        jLabel2 = new JLabel();
        jLabel3 = new JLabel();
        jLabel4 = new JLabel();
        _mCodeButtonDelayTime = new JFormattedTextField();
        jLabel7 = new JLabel();
        jRadioButton1 = new QRadioButton();
        jRadioButton2 = new QRadioButton();
        jLabel5 = new JLabel();
        _mTUL_SecondsToLockTurnouts = new JSpinner();
        jLabel6 = new JLabel();

        setDefaultCloseOperation(JFrame::DO_NOTHING_ON_CLOSE);
        setTitle(tr("CTC Defaults"));
//        addWindowListener(new java.awt.event.WindowAdapter() {
//            @Override
//            /*public*/ void windowClosing(java.awt.event.WindowEvent evt) {
//                formWindowClosing(evt);
//            }
//        });
        addWindowListener(new FrmDefaults_windowListener(this));

        //_mSWDI_CodingTimeInMilliseconds.setFormatterFactory(new text.DefaultFormatterFactory(new text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        _mSWDI_CodingTimeInMilliseconds->setValidator(new QIntValidator(0, 120000));

        //_mSIDI_CodingTimeInMilliseconds.setFormatterFactory(new text.DefaultFormatterFactory(new text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        _mSIDI_CodingTimeInMilliseconds->setValidator(new QIntValidator(0, 120000));

        jLabel19->setText(tr("Coding and response time (milliseconds):"));

        //_mSIDI_TimeLockingTimeInMilliseconds.setFormatterFactory(new text.DefaultFormatterFactory(new text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        _mSIDI_TimeLockingTimeInMilliseconds->setValidator(new QIntValidator(0, 120000));

        jLabel22->setText(tr("Time locking interval (milliseconds):"));

        jLabel27->setText(tr("Coding and response time (milliseconds):"));

        _mSaveAndClose->setText(tr("Save and Close"));
//        _mSaveAndClose.addActionListener(new java.awt.event.ActionListener() {
//            @Override
//            /*public*/ void actionPerformed(/*java.awt.event.ActionEvent evt*/) {
        connect(_mSaveAndClose, &JButton::clicked, [=]{
                _mSaveAndCloseActionPerformed(/*evt*/);
//            }
        });

        jLabel18->setText(tr("------------ Signal direction indicators ------------"));

        jLabel17->setText(tr("All millisecond values below are between 0 and 120,000 inclusive:"));

        jLabel23->setText(tr("------------ Switch direction indicators ------------"));

        jLabel1->setText(tr("Turnout locks enabled at startup:"));

        jLabel2->setText(tr("No Code Button delay (in milliseconds):"));

        jLabel3->setText(tr("Enter 0 for normal Code Button default for each O.S. section"));

        jLabel4->setText(tr("Enter >0 for tower O.S. section delay (no Code Button)"));

        //_mCodeButtonDelayTime.setFormatterFactory(new text.DefaultFormatterFactory(new text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        _mCodeButtonDelayTime->setValidator(new QIntValidator(0, 120000));

        jLabel7->setText(tr("Signal System Type:"));

        _mSignalSystemType->addButton(jRadioButton1);
        jRadioButton1->setText(tr("Signal Heads"));

        _mSignalSystemType->addButton(jRadioButton2);
        jRadioButton2->setText(tr("Signal Masts"));

        jLabel5->setText(tr("Seconds until all lockable turnouts locked:"));

        jLabel6->setText(tr("Set to 0 to disable)"));
#if 0
        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel17)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel18)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel22)
                                            .addComponent(jLabel19)
                                            .addComponent(jLabel2))
                                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(_mSIDI_CodingTimeInMilliseconds, GroupLayout.PREFERRED_SIZE, 93, GroupLayout.PREFERRED_SIZE)
                                                        .addGap(40, 40, 40)
                                                        .addComponent(jLabel27))
                                                    .addComponent(_mSIDI_TimeLockingTimeInMilliseconds, GroupLayout.PREFERRED_SIZE, 93, GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(_mSWDI_CodingTimeInMilliseconds, GroupLayout.PREFERRED_SIZE, 79, GroupLayout.PREFERRED_SIZE))
                                            .addGroup(GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(_mCodeButtonDelayTime, GroupLayout.PREFERRED_SIZE, 93, GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel4)
                                                    .addComponent(jLabel3)))
                                            .addGroup(GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                .addGap(133, 133, 133)
                                                .addComponent(jLabel23))))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                    .addComponent(jRadioButton2)
                                    .addComponent(jRadioButton1)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(243, 243, 243)
                        .addComponent(_mSaveAndClose))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel1, GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addComponent(_mTUL_EnabledAtStartup)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(_mTUL_SecondsToLockTurnouts, GroupLayout.PREFERRED_SIZE, 53, GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel6)))))
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jRadioButton1))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButton2)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(_mTUL_EnabledAtStartup))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(_mTUL_SecondsToLockTurnouts, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addComponent(jLabel17)
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(jLabel23))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(_mSIDI_CodingTimeInMilliseconds, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19)
                    .addComponent(jLabel27)
                    .addComponent(_mSWDI_CodingTimeInMilliseconds, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(_mSIDI_TimeLockingTimeInMilliseconds, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(_mCodeButtonDelayTime, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addComponent(_mSaveAndClose)
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
#else
        JPanel* contentPane = new JPanel();
        QVBoxLayout* contentPaneLayout;
        contentPane->setLayout(contentPaneLayout = new QVBoxLayout());
        setCentralWidget(contentPane);

        JPanel* panel1 = new JPanel(new QHBoxLayout());
        JPanel* panel1a = new JPanel(new QVBoxLayout());
        panel1a->layout()->addWidget(jRadioButton1);
        panel1a->layout()->addWidget(jRadioButton2);
        panel1->layout()->addWidget(jLabel7);
        panel1->layout()->addWidget(panel1a);
        contentPaneLayout->addWidget(panel1);
        contentPaneLayout->addWidget(new JLabel(" "));

        JPanel* panel2 = new JPanel(new QHBoxLayout());
        panel2->layout()->addWidget(new JLabel("        "));
        panel2->layout()->addWidget(jLabel1);
        panel2->layout()->addWidget(_mTUL_EnabledAtStartup);
        contentPaneLayout->addWidget(panel2);

        JPanel* panel3 = new JPanel(new QHBoxLayout());
        panel3->layout()->addWidget(jLabel5);
        panel2->layout()->addWidget(_mTUL_SecondsToLockTurnouts);
        panel2->layout()->addWidget(jLabel6);
        contentPaneLayout->addWidget(panel3);


        JPanel* panel9 = new JPanel(new QHBoxLayout());
        JPanel* panel9a = new JPanel(new FlowLayout());
        panel9a->layout()->addWidget(_mSaveAndClose);
        ((QHBoxLayout*)panel9->layout())->addWidget(panel9a, 0, Qt::AlignHCenter);
        contentPaneLayout->addWidget(panel9);
#endif
        pack();
    }// </editor-fold>

    /*private*/ void FrmDefaults::formWindowClosing(QCloseEvent* evt) {
        _mAwtWindowProperties->saveWindowState(this, FORM_PROPERTIES);
        if (CommonSubs::allowClose(this, dataChanged())) dispose();
    }

    /*private*/ void FrmDefaults::_mSaveAndCloseActionPerformed(/*java.awt.event.ActionEvent evt*/) {
        _mProgramProperties->_mSIDI_CodingTimeInMilliseconds = _mSIDI_CodingTimeInMilliseconds->text().toInt();
        _mProgramProperties->_mSIDI_TimeLockingTimeInMilliseconds = _mSIDI_TimeLockingTimeInMilliseconds->text().toInt();
        _mProgramProperties->_mSWDI_CodingTimeInMilliseconds = _mSWDI_CodingTimeInMilliseconds->text().toInt();
        _mOtherData->_mTUL_EnabledAtStartup = _mTUL_EnabledAtStartup->isChecked();
        _mProgramProperties->_mCodeButtonDelayTime = _mCodeButtonDelayTime->text().toInt();
        _mOtherData->_mSignalSystemType = OtherData::SIGNAL_SYSTEM_TYPE::getSignalSystemType(_mSignalSystemType);
        _mOtherData->_mTUL_SecondsToLockTurnouts = (int)_mTUL_SecondsToLockTurnouts->value();
        _mClosedNormally = true;
        _mAwtWindowProperties->saveWindowState(this, FORM_PROPERTIES);
        dispose();
    }

