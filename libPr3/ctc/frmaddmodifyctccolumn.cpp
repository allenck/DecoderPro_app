#include "frmaddmodifyctccolumn.h"
#include "spinnernumbermodel.h"
#include "joptionpane.h"

/**
 *
 * @author Gregory J. Bedlek Copyright (C) 2018, 2019
 */
// /*public*/ class FrmAddModifyCTCColumn extends JFrame {

    /*private*/ /*static*/ /*final*/ QString FrmAddModifyCTCColumn::FORM_PROPERTIES = "DlgAddModifyCTCColumn";  // NOI18N

/**
 * Creates new form NewColumn
 */

/*public*/ FrmAddModifyCTCColumn::FrmAddModifyCTCColumn(AwtWindowProperties* awtWindowProperties,
        Columns* columns,
        bool isModify,
        int existingSwitchNumber,
        int existingGUIColumnNumber,
        bool existingGUIGeneratedAtLeastOnceAlready,
        QObject* parent) {
    //super();
    initComponents();
    CommonSubs::addHelpMenu(this, "package.jmri.jmrit.ctc.CTC_osList", true);  // NOI18N
    _mAwtWindowProperties = awtWindowProperties;
    _mColumns = columns;
    _mIsModify = isModify;
    if (!isModify) {    // Add:
        this->setTitle(tr("Add new Switch and Signal etc. #'s"));  // NOI18N
    } else {    // Modify:
        this->setTitle(tr("Modify Switch and Signal etc. #'s"));  // NOI18N
    }
    _mGUIColumnNumber->setModel(new SpinnerNumberModel(existingGUIColumnNumber, 0, 32767, 1));
    _mGUISwitchNumber->setModel(new SpinnerNumberModel(existingSwitchNumber, 1, 32767, 2));
    _mGUIGeneratedAtLeastOnceAlready->setChecked(existingGUIGeneratedAtLeastOnceAlready);
    _mAwtWindowProperties->setWindowState(this, FORM_PROPERTIES);
    //this.getRootPane().setDefaultButton(_mSaveAndClose);
    _mSaveAndClose->setDefault(true);
}

/**
 * This method is called from within the constructor to initialize the form.
 * WARNING: Do NOT modify this code. The content of this method is always
 * regenerated by the Form Editor.
 */
// <editor-fold defaultstate="collapsed" desc="Generated Code">
/*private*/ void FrmAddModifyCTCColumn::initComponents() {

    jLabel1 = new JLabel();
    jLabel2 = new JLabel();
    _mSaveAndClose = new JButton();
    jLabel4 = new JLabel();
    jLabel5 = new JLabel();
    _mGUIColumnNumber = new JSpinner();
    _mGUISwitchNumber = new JSpinner();
    _mGUIGeneratedAtLeastOnceAlready = new JCheckBox();

    setDefaultCloseOperation(JFrame::DO_NOTHING_ON_CLOSE);
//    addWindowListener(new java.awt.event.WindowAdapter() {
//        @Override
//        /*public*/ void windowClosing(java.awt.event.WindowEvent evt) {
//            formWindowClosing(evt);
//        }
//    });
    addWindowListener(new FrmAddModify_windowListener(this));

    jLabel1->setHorizontalAlignment(SwingConstants::TRAILING);
    jLabel1->setText(tr("Switch #:"));

    jLabel2->setText(tr("The Signal # will always be one more than the switch #"));

    _mSaveAndClose->setText(tr("Save and close"));
//    _mSaveAndClose.addActionListener(new java.awt.event.ActionListener() {
//        @Override
//        /*public*/ void actionPerformed(/*java.awt.event.ActionEvent evt*/) {
    connect(_mSaveAndClose, &JButton::clicked, [=]{
            _mSaveAndCloseActionPerformed(/*evt*/);
//        }
    });

    jLabel4->setText(tr("GUI column #:"));

    jLabel5->setText(tr("0 = nothing generated"));

    _mGUIGeneratedAtLeastOnceAlready->setText(tr("GUI Generated before") );
#if 0
    GroupLayout layout = new GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addGap(15, 15, 15)
            .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGroup(GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addGap(63, 63, 63)
                    .addComponent(_mSaveAndClose, GroupLayout.PREFERRED_SIZE, 131, GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(layout.createSequentialGroup()
                    .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addComponent(_mGUIGeneratedAtLeastOnceAlready)
                        .addComponent(jLabel2)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel1, GroupLayout.PREFERRED_SIZE, 69, GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel4))
                            .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(_mGUIColumnNumber, GroupLayout.PREFERRED_SIZE, 69, GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabel5))
                                .addComponent(_mGUISwitchNumber, GroupLayout.PREFERRED_SIZE, 70, GroupLayout.PREFERRED_SIZE))))
                    .addGap(0, 136, Short.MAX_VALUE))))
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel1)
                .addComponent(_mGUISwitchNumber, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jLabel2)
            .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel4)
                .addComponent(jLabel5)
                .addComponent(_mGUIColumnNumber, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(_mGUIGeneratedAtLeastOnceAlready)
            .addGap(32, 32, 32)
            .addComponent(_mSaveAndClose)
            .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
#else
#endif
    JPanel* contentPane = new JPanel();
    contentPane->setLayout(new QVBoxLayout());
    setCentralWidget(contentPane);

    JPanel* panel1 = new JPanel();
    panel1->setLayout(new FlowLayout);
    panel1->layout()->addWidget(jLabel1);
    panel1->layout()->addWidget(_mGUISwitchNumber);
    contentPane->layout()->addWidget(panel1);

    contentPane->layout()->addWidget(jLabel2);

    JPanel* panel2 = new JPanel();
    panel2->setLayout(new QVBoxLayout());
    panel2->layout()->addWidget(jLabel4);
    panel2->layout()->addWidget(jLabel5);
    panel2->layout()->addWidget(_mGUIColumnNumber);
    contentPane->layout()->addWidget(panel2);

    contentPane->layout()->addWidget(_mGUIGeneratedAtLeastOnceAlready);

    contentPane->layout()->addWidget(_mSaveAndClose);

    pack();
}// </editor-fold>

/*private*/ void FrmAddModifyCTCColumn::_mSaveAndCloseActionPerformed(/*java.awt.event.ActionEvent evt*/) {
    _mNewSwitchNumber = (int)_mGUISwitchNumber->value();
    _mNewGUIColumnNumber = (int)_mGUIColumnNumber->value();
    QString errorText = _mColumns->checkForDups(_mNewSwitchNumber, _mNewGUIColumnNumber, _mIsModify, _mColumns->getEntrySelectedIndex());
    if (!errorText.isNull()) {
        JOptionPane::showMessageDialog(this, errorText, tr("Duplicate"), JOptionPane::ERROR_MESSAGE); return; // NOI18N   DO NOT EXIT OUT OF FORM!
    }
    _mNewSignalEtcNumber = _mNewSwitchNumber + 1;
    _mNewGUIGeneratedAtLeastOnceAlready = _mGUIGeneratedAtLeastOnceAlready->isChecked();

    _mClosedNormally = true;
    _mAwtWindowProperties->saveWindowState(this, FORM_PROPERTIES);
    dispose();  // All valid, valid to exit out of form.
}

/*private*/ void FrmAddModifyCTCColumn::formWindowClosing(QCloseEvent* evt) {
    _mAwtWindowProperties->saveWindowState(this, FORM_PROPERTIES);
    dispose();
}

